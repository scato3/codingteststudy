# 이것이 취업을 위한 코딩테스트다.
# 1이 될 때 까지
"""
어떠한 수 N이 1이 될 때 까지 다음의 두 과정 중 하나를 반복적으로 선택해 수행하려 함
단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있음

1. N에서 1을 뺀다.
2. N을 K로 나눈다.(N이 K로 나눠어 떨어질 때만)

N이 1이 될 때 까지 1번 혹은 2번의 과정을 수행해야하는 최소 횟수를 구하는 프로그램을 작성하시오.

예시 N = 17 K = 4)
1번 + 2번 + 2번 -> N -> 16 -> 4 -> 1 최소횟수: 3

입력
첫째 줄에 N(2<= N <= 100000)과 K(2 <= K <= 100000)가 공백으로 구분되며 각각 자연수로 주어짐

이때, 입력으로 주어지는 N은 항상 K보다 크거나 같음

출력
첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력

입력 예시
25 5
출력 예시
2
"""

n, k = map(int, input().split())
cnt = 0

while(n > 1):
    if(n % k == 0):
        n = n // k
        cnt += 1
    else:
        n -= 1
        cnt += 1
print(cnt)

# 책 풀이
n, k = map(int, input().split())  # 17 4
result = 0

while True:
    # n이 k로 나누어 떨어지지 않는다면 k로 나누어 떨어지는 가장 가까운 수 찾기
    target = (n // k) * k  # target = 4*4
    result += (n-target)  # result = 1
    n = target  # n : 17 -> 16

    # n이 k보다 작을 때( 더이상 나눌 수 없음) break
    if n < k:
        break
    result += 1
    n //= k

result += (n-1)
print(result)
